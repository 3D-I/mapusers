{"version":3,"sources":["C:/myersware/workspace_mw/MapGoogleUsersWeb-ngmap/src/$_lazy_route_resource lazy","C:/myersware/workspace_mw/MapGoogleUsersWeb-ngmap/src/app/app.component.css","C:/myersware/workspace_mw/MapGoogleUsersWeb-ngmap/src/app/app.component.ts","C:/myersware/workspace_mw/MapGoogleUsersWeb-ngmap/src/app/app.module.ts","C:/myersware/workspace_mw/MapGoogleUsersWeb-ngmap/src/environments/environment.ts","C:/myersware/workspace_mw/MapGoogleUsersWeb-ngmap/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myersware/workspace_mw/MapGoogleUsersWeb-ngmap/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"ngui-map {\\r\\n\\theight: 800px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/myersware/workspace_mw/MapGoogleUsersWeb-ngmap/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","import { Component, NgZone, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Observable } from 'rxjs/Observable';\nimport { NguiMapModule } from '@ngui/map';\nimport 'rxjs/add/observable/from';\nimport { HttpClient, HttpErrorResponse, HttpRequest, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material';\nimport {MatInputModule} from '@angular/material';\nimport {MatSelectModule} from '@angular/material';\nimport {MatButtonModule} from '@angular/material';\nimport {MatSliderModule} from '@angular/material';\n\n// just an interface for type safety.\ninterface Crasher {\n    id: number;\n    key: number;\n    forum: string;\n    name: string;\n    role: string;\n    latitude?: number;\n    longitude?: number;\n    location: string;\n    iconUrl?: string;\n}\n\n@Component({\n        selector: 'app-gm',\n        styleUrls: ['app.component.css'],\n        template: `\n          <h1>Forum User Locations</h1>\n          <div>\n            <mat-form-field>\n                <input matInput [(ngModel)]=\"searchLocation\" placeholder=\"Search location\">\n            </mat-form-field>\n             Radius(km)={{ searchRadius }}\n            <mat-slider [(ngModel)]=\"searchRadius\" (input)=\"this.onSliderChange($event)\"\n                min=\"100\" max=\"20000\" step=\"100\" value=\"200\">\n            </mat-slider>\n            <md-slider></md-slider>\n            <button mat-button (click)=\"searchLocations(this.searchNearLocations)\" [disabled]=\"!searchLocation || !searchRadius\">\n                Search\n            </button>\n            <div>\n                <mat-form-field *ngIf=\"selectOptions\">\n                    <mat-select placeholder=\"Pick a user\" name=\"selectUser\"\n                        [(ngModel)]=\"selectedLocation\" (selectionChange)=\"showLocation()\">\n                        <mat-option *ngFor=\"let opt of selectOptions\" [value]=\"opt[0]\">\n                            {{ opt[1] }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n          <ngui-map center=\"{{ mapCenter }}\"\n            [zoom]=\"3\"\n            [zoomControlOptions]=\"{position: 'TOP_CENTER'}\"\n            [fullscreenControl]=\"true\"\n            [fullscreenControlOptions]=\"{position: 'TOP_CENTER'}\"\n            (click)=\"log($event)\"\n            [scrollwheel]=\"false\">\n            <marker *ngFor=\"let pos of positions\" [position]=\"pos.latlng\"\n                    [icon]=\"pos.item.icon\" [label]=\"pos.item.label\"\n                     (click)=\"clicked($event, pos)\">\n                <info-window id=\"iw-{{ pos.item.id }}\">\n                    <div *ngIf=\"info.display\">\n                        {{ info.forum_name }} @ lat: {{ info.geo.latitude }}, lng: {{ info.geo.longitude }}\n                    </div>\n                </info-window>\n            </marker>\n          </ngui-map>\n\n          `\n      })\n\nexport class AppComponent {\n    mapCenter = [];\n    searchLocation: string;\n    selectOptions = [];\n    selectedLocation = 0;\n    searchRadius = 50;\n    loadCrashers = '../assets/crashers.json';\n    loadGetUser = '/app.php/mapusers/xhr/getUser';\n    loadRemote = '/app.php/mapusers/xhr/searchUsers';\n    initItems: any;\n    email = 'myersjj@gmail.com';\n    password = 'jjm2580J';\n    forum_id: number;\n    forum_name: string;\n    user_name: string;\n    autologin: string;\n    role: string;\n    location: string;\r\n    markers: Observable<any[]>;\n    positions = [];\n    users;\n    items: any[] = [];\n    rawItems: any[];\n    title = 'Liberation Unleashed Members';\n    lat = 20.0;\n    lng = -20.0;\n    info = {\n            id: 0,\n            display: true,\n            name: null,\n            forum_name: null,\n            color: null,\n            geo: null,\n            location: null,\n            iconUrl: null,\n            label: null,\n    };\n\n    log(event, str) {\n        if (event instanceof MouseEvent) {\n          return false;\n        }\n        console.log('event .... >', event, str);\n    }\n\n    onMapReady(map) {\n        console.log('map', map);\n        console.log('markers', map.markers);  // to get all markers as an array\n    }\n    onIdle(event) {\n        console.log('map', event.target);\n    }\n    onMarkerInit(marker) {\n        console.log('marker', marker);\n    }\n    onMapClick(event) {\n        this.positions.push(event.latLng);\n        event.target.panTo(event.latLng);\n    }\n\n    showLocation(event) {\n        // console.log('showLocation id=', this.selectedLocation);\n        if (this.selectedLocation === 0) { return; }\n        const thisLoc = this.users.find(k => Number(k.id) === Number(this.selectedLocation));\n        console.log('thisLoc(', this.selectedLocation, ')=', thisLoc);\n        if (thisLoc.geo.latitude) {\n            this.mapCenter = [Number(thisLoc.geo.latitude), Number(thisLoc.geo.longitude)];\n        } else {\n            this.mapCenter = [this.lat, this.lng];\n        }\n        console.log('mapCenter=', this.mapCenter);\n    }\n\n    getUser() {\n        const headers = new HttpHeaders()\n        .set('X-Requested-With', 'XMLHttpRequest')\n        .set('responseType', 'json');\n        // console.log('added headers=', headers);\n        const geocoder = new google.maps.Geocoder();\n        this.http.get(this.loadGetUser, {headers})\n        .subscribe(\n                data => {\n                    console.log('getUser data=', data);\n                    this.info = <any>data[0];\n                    // console.log('home info=', this.info);\n                    this.searchLocation = this.info.location;\n                    this.getIconUrl(this.info);\n                    this.positions.push({latlng: [Number(this.info.geo.latitude), Number(this.info.geo.longitude)], item: this.info});\n                    console.log('initial position=', this.positions);\n                    if (this.info.geo.latitude) {\n                        this.mapCenter = [Number(this.info.geo.latitude), Number(this.info.geo.longitude)];\n                    } else {\n                        this.mapCenter = [this.lat, this.lng];\n                    }\n                    console.log('mapCenter=', this.mapCenter);\n                });\n    }\n\n    reload(center) {\n        console.log('reloading from Remote..., center=', center);\n        this.clearLocations();\n        let items;\n        const headers = new HttpHeaders()\n            .set('X-Requested-With', 'XMLHttpRequest')\n            .set('responseType', 'json');\n        // console.log('added headers=', headers);\n        const geocoder = new google.maps.Geocoder();\n        let params = null;\n        if (center) {\n            params = new HttpParams().set('lat', center.geometry.location.lat())\n                    .set('lng', center.geometry.location.lng())\n                    .set('radius', String(this.searchRadius));\n            console.log('reload params=', params);\n        }\n        this.http.get(this.loadRemote, {params: params, headers: headers})\n        .subscribe(\n                data => {\n                    console.log('remote data=', data);\n                    items = data;\n                    this.users = items;\n                    // console.log('load items=', items);\n                    for (const item of items) {\n                        // console.log('insert new ', item);\n                        this.getIconUrl(item);\n                        this.info = {id: item.id,\n                                geo: {latitude: Number(item.geo.latitude),\n                                    longitude: Number(item.geo.longitude)},\n                                display: true,\n                                name: item.name,\n                                color: item.color,\n                                forum_name: item.forum,\n                                location: item.location,\n                                iconUrl: item.iconUrl,\n                                label: null,\n                        };\n                        if (!item.geo.latitude) {\n                            const _positions = this.positions;\n                            geocoder.geocode({address: item.location}, function(results, status) {\n                              if (status === google.maps.GeocoderStatus.OK) {\n                                  console.log('loc=', item.location, ' status=', status, ' results=', results);\n                                  item.geo.latitude = Number(results[0].geometry.location.lat());\n                                  item.geo.longitude = Number(results[0].geometry.location.lng());\n                                  _positions.push({latlng: [Number(item.geo.latitude), Number(item.geo.longitude)], item: item});\n                              } else {\n                                  alert(this.location + ' not found');\n                              }\n                            });\n                        } else {\n                            this.positions.push({latlng: [Number(item.geo.latitude), Number(item.geo.longitude)], item: item});\n                        }\n                        this.selectOptions.push([item.id, item.forum, item.iconUrl]);\n                        // this.updateItem(item, true);\n                    }\n                    // console.log('selectOptions=', this.selectOptions);\n                },\n                error => {\n                    console.log('loadRemote error=', error);\n                });\n    }\n\n    reloadLocal() {\n        console.log('reloading from Local...');\n        this.clearLocations();\n        let items;\n        const geocoder = new google.maps.Geocoder();\n        this.http.get(this.loadCrashers, {responseType: 'json'})\n        .subscribe(\n                data => {\n                    items = data;\n                    this.users = items;\n                    console.log('load items=', items);\n                    for (const item of items.crashers) {\n                        // console.log('insert new ', item);\n                        this.getIconUrl(item);\n                        this.info = {id: item.id,\n                                geo: {latitude: Number(item.geo.latitude),\n                                longitude: Number(item.geo.longitude)},\n                                display: true,\n                                name: item.name,\n                                color: item.color,\n                                forum_name: item.forum,\n                                location: item.location,\n                                iconUrl: item.iconUrl,\n                                label: null,\n                        };\n                        if (!item.latitude) {\n                            const _positions = this.positions;\n                            geocoder.geocode({address: item.location}, function(results, status) {\n                              if (status === google.maps.GeocoderStatus.OK) {\n                                  console.log('loc=', item.location, ' status=', status, ' results=', results);\n                                  item.geo.latitude = Number(results[0].geometry.location.lat());\n                                  item.geo.longitude = Number(results[0].geometry.location.lng());\n                                  _positions.push({latlng: [Number(item.geo.latitude), Number(item.geo.longitude)], item: item});\n                              } else {\n                                  alert(this.location + ' not found');\n                              }\n                            });\n                        } else {\n                            this.positions.push({latlng: [Number(item.latitude), Number(item.longitude)], item: item});\n                        }\n                        this.selectOptions.push([item.id, item.forum, item.iconUrl]);\n                        // this.updateItem(item, true);\n                    }\n                    // console.log('selectOptions=', this.selectOptions);\n                });\n    }\n\n    markerClick(marker) {\n        // once marker is given, iterate through your list of markers and\n        // change this marker's icon and make sure the rest of the icons are back to their default\n        console.log('click marker ', marker);\n    }\n\n    onSliderChange(event: any) {\n            console.log(event);\n            console.log('radius=', this.searchRadius);\n    }\n\n    clicked(event, marker) {\n        console.log('clicked marker ', event, marker);\n        this.info.geo = {latitude: event.target.getPosition().lat(),\n                longitude: event.target.getPosition().lng()};\n        this.info.display = true;\n        this.info.name = marker.item.name;\n        this.info.forum_name = marker.item.forum;\n        // console.log('info=', this.info, ' at id=', 'iw-' + marker.item.id);\n        this.mapCenter = [Number(this.info.geo.latitude), Number(this.info.geo.longitude)];\n        event.target.nguiMapComponent.openInfoWindow('iw-' + marker.item.id, event.target);\n    }\n\n    getIconUrl(item) {\n        item.label = {\n                fontFamily: 'Fontawesome',\n                text: '\\uf041', // code for font-awesome icon\n                'font-size': '48px',\n                color: '#' + item.color\n        };\n        item.icon = {\n            path: google.maps.SymbolPath.CIRCLE, // or any others\n            scale: 0\n        };\n        // console.log('item.label=', item.label);\n    }\n\n    clearLocations() {\n        console.log('clearLocations()');\n        this.positions = [];\n        this.info = null;\n        this.selectOptions = [];\n        this.selectOptions.push([0, 'none', '']);\n    }\n\n    searchLocations() {\n        const address = this.searchLocation;\n        const geocoder = new google.maps.Geocoder();\n        const _this = this;\n        geocoder.geocode({address: address}, function(results, status) {\n          if (status === google.maps.GeocoderStatus.OK) {\n              console.log('loc=', address, ' status=', status, ' results=', results);\n              _this.searchNearLocations.call(_this, results[0], status);\n          } else {\n              alert(address + ' not found');\n          }\n        });\n    }\n\n    searchNearLocations(this, center, status) {\n        console.log('center=', center);\n        this.mapCenter = [Number(center.geometry.location.lat()),\n                Number(center.geometry.location.lng())];\n        this.reload(center);\n    }\n\n    constructor(private http: HttpClient,\n            private __zone: NgZone) {\n\n        this.getUser();\n        this.reload(null);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/myersware/workspace_mw/MapGoogleUsersWeb-ngmap/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ApplicationRef, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSliderModule} from '@angular/material/slider';\nimport { AppComponent } from './app.component';\nimport { NguiMapModule} from '@ngui/map';\nimport { environment } from '../environments/environment';\nimport { HttpClientModule } from '@angular/common/http';\n\n// Do not import from 'firebase' as you'd lose the tree shaking benefits\nimport * as firebase from 'firebase/app';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatSliderModule,\n    HttpClientModule,\n    NguiMapModule.forRoot()\n  ],\n  exports: [\n            MatFormFieldModule,\n            MatInputModule,\n            MatSelectModule,\n            MatButtonModule,\n            MatSliderModule],\n  declarations: [ AppComponent ],\n  providers: [\n              NguiMapModule\n            ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// C:/myersware/workspace_mw/MapGoogleUsersWeb-ngmap/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/myersware/workspace_mw/MapGoogleUsersWeb-ngmap/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/myersware/workspace_mw/MapGoogleUsersWeb-ngmap/src/main.ts"],"sourceRoot":"webpack:///"}